<style>
    .admin-customers-container {
        min-height: 100vh;
    }

    .category-search-box {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin: 3rem 0;
    }

    .admin-category-search-box {
        border: 1px solid #000000;
        border-radius: 10px;
        padding: .2rem .3rem;
        margin-top: 2rem;
    }

    #user-search {
        border: none;
        outline: none;
        width: 30rem;
        height: 2.5rem;
    }

    .add-new-product {
        text-align: center;
        margin: 1rem 0 2rem 0;
    }

    .admin-category-form,
    .admin-edit-category-form {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .admin-category-form input,
    .admin-edit-category-form input {
        border: 1px solid #c5c5c5;
        outline: none;
        padding: 10px;
        border-radius: 10px;
        width: 100%;
    }

    .category-name-table {
        text-transform: capitalize;
    }

    .category-criteria {
        display: flex;
        justify-content: flex-start;
        flex-direction: column;
        width: 90%;
    }
</style>




<%- include('navbar') %>



<div class="admin-customers-container container">
    <div class="category-search-box">
        <h3>Category</h3>
        <!-- button trigger for modal to add new category -->
        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#new-category-modal">Add
            New Category <i class="fa-solid fa-plus"></i></button>
    </div>
    <div class="mt-5 table-responsive">
        <table class="table ">
            <thead class="table-primary">
                <tr>
                    <th scope="col" class="text-center py-3">sl.no</th>
                    <th scope="col" class="py-3">Category</th>
                    <th scope="col" class="py-3">Added On</th>
                    <th scope="col" class="py-3">Updated On</th>
                    <th scope="col" class="py-3">Status</th>
                    <th scope="col" class="text-center py-3">Actions</th>
                </tr>
            </thead>
            <tbody>
                <% category.forEach((category, index) => { %>
                    <tr>
                        <th scope="row" class="text-center">
                            <%= index + 1 %>
                        </th>
                        <td>
                            <%= category.categoryName %>
                        </td>
                        <td>
                            <%= category.createdAt.toLocaleDateString() %>
                        </td>
                        <td>
                            <%= category.updatedAt.toLocaleDateString() %>
                        </td>
                        <td>
                            <% if (category.isActive) { %>
                                <b class="badge bg-success">ACTIVE</b>
                            <% } else { %>
                                <b class="badge bg-danger">INACTIVE</b>
                            <% } %>
                        </td>
                        <td class="text-center">
                            <button type="button" class="btn edit-category" data-bs-toggle="modal"
                                data-bs-target="#edit-category-modal" data-categoryID="<%= category.id %>"
                                data-category="<%= category.categoryName %>">
                                <i class="fa-solid fa-pen-to-square"></i></button>
                            <% if (category.isActive) { %>
                                <button class="btn category-unhide" data-categoryID="<%= category.id %>">
                                    <i class="fa-solid fa-lock-open"></i>
                                </button>
                            <% } else { %>
                                <button class="btn category-hide" data-categoryID="<%= category.id %>">
                                    <i class="fa-solid fa-lock"></i>
                                </button>
                            <% } %>
                            <button class="btn category-delete" data-categoryID="<%= category.id %>">
                                <i class="fa-regular fa-trash-can"></i></button>
                        </td>
                    </tr>
                <% }) %>
                <% if (category.length === 0) { %>
                    <tr>
                        <th colspan="6" class="text-center text-secondary p-5">No category</th>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>
</div>

<%- include('footer') %>

<!-- Modal for adding new category -->
<div class="modal fade" id="new-category-modal" tabindex="-1" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header d-flex justify-content-between">
                <h5 class="modal-title" id="exampleModalLongTitle">Add New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-5">
                <form action="/admin/category" method="post" class="admin-category-form mt-4">
                    <input type="text" name="newCategory" placeholder="Enter new category" id="new-category"
                        minlength="3" maxlength="30" required>
                    <button class="btn btn-success mt-4" id="new-category-btn">Add category</button>
                </form>
                <button class="btn" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample"
                    aria-expanded="false" aria-controls="collapseExample">
                    Criteria <i class="fa-solid fa-caret-down"></i>
                </button>
                <div class="collapse" id="collapseExample">
                    <div class="mt-4 category-criteria">
                        <small>Minimum 3 words</small>
                        <small>Maximum 30 words</small>
                        <small>Should not contain special characters</small>
                        <small>Should not only contain white spaces</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end of Modal for adding new category -->

<!-- Modal for editing category -->
<div class="modal fade" id="edit-category-modal" tabindex="-1" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header d-flex justify-content-between">
                <h5 class="modal-title" id="exampleModalLongTitle">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-5">
                <form action="/admin/edit-category" method="post" class="admin-edit-category-form mt-4">
                    <input type="text" name="editCategory" id="modal-category-edit" minlength="3" maxlength="30" required>
                    <button class="btn btn-warning mt-4" id="edit-category-btn">Edit category</button>
                </form>
                <button class="btn" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample"
                    aria-expanded="false" aria-controls="collapseExample">
                    Criteria <i class="fa-solid fa-caret-down"></i>
                </button>
                <div class="collapse" id="collapseExample">
                    <div class="mt-4 category-criteria">
                        <small>Minimum 3 words</small>
                        <small>Maximum 30 words</small>
                        <small>Should not contain special characters</small>
                        <small>Should not only contain white spaces</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



        <script>

            // validating the new category field to check whether the field containing only white space , if it contain special characters
            const category = document.getElementById('new-category')
            const categorySubmitBtn = document.getElementById('new-category-btn')

            categorySubmitBtn.disabled = true

            // event listener for modal form 
            category.addEventListener('input', () => {

                // if category has only white space then the submit button will be disabled
                if (category.value.trim() === '') {
                    categorySubmitBtn.disabled = true;

                } else {

                    // if category has content then enable the button
                    categorySubmitBtn.disabled = false


                    // this function remove all unnecessary spaces ie which have more than one consecutive white spaces and replace special characters
                    function trimExtraSpaces(str) {
                        return str.replace(/\s+/g, ' ').replace(/[^\w\s]|_/gi, '');
                    }

                    // prevent typing the special characters
                    let actualCategory = trimExtraSpaces(category.value)
                    category.value = actualCategory

                }
            })



            // confirmation for deleting the category
            const deleteCategory = document.querySelectorAll(".category-delete")

            // because of many buttons for each is used to traverse and add eventListener for each of them
            deleteCategory.forEach((button) => {
                button.addEventListener("click", function (event) {
                    const categoryID = button.getAttribute('data-categoryID')
                    event.preventDefault(); // Prevent default link behavior

                    Swal.fire({
                        title: 'Deleting the category',
                        text: "Are you sure you want to permanently delete this category?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // If the category confirms the deletion, navigate to the delete link
                            window.location.href = `/admin/delete-category/${categoryID}`
                        }
                    });
                });
            })


            // confirmation for deactivating the category
            const deactivateCategory = document.querySelectorAll(".category-unhide")
            // because of many buttons for each is used to traverse and add eventListener for each of them
            deactivateCategory.forEach((button) => {
                button.addEventListener("click", function (event) {
                    event.preventDefault(); // Prevent default link behavior
                    const categoryID = button.getAttribute('data-categoryID')
                    Swal.fire({
                        title: 'Deactivate the category',
                        text: "Are you sure you want to deactivate the category?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, deactivate it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // If the category confirms the deletion, navigate to the delete link
                            window.location.href = `/admin/hide-category/${categoryID}`
                        }
                    });
                });
            })



            // confirmation for activating the category
            const activateCategory = document.querySelectorAll(".category-hide")
            // because of many buttons for each is used to traverse and add eventListener for each of them
            activateCategory.forEach((button) => {
                button.addEventListener("click", function (event) {
                    const categoryID = button.getAttribute('data-categoryID')
                    event.preventDefault(); // Prevent default link behavior

                    Swal.fire({
                        title: 'Activate the category',
                        text: "Are you sure you want to activate this category?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, activate it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = `/admin/unhide-category/${categoryID}`
                        }
                    });
                });
            })


            // edit the category modal data addon
            const editCategoryBtn = document.querySelectorAll('.edit-category')
            const editModal = document.getElementById('modal-category-edit')
            editCategoryBtn.forEach((button) => {
                button.addEventListener('click', (e) => {
                    const categoryID = button.getAttribute('data-categoryID')
                    editModal.value = button.getAttribute('data-category')
                    document.getElementsByClassName('admin-edit-category-form')[0].action = `/admin/edit-category/${categoryID}`

                })
            })

            // validating the new category field to check whether the field containing only white space , if it contain special characters
            const editCategorySubmitBtn = document.getElementById('edit-category-btn')

            editCategorySubmitBtn.disabled = true

            // event listener for modal form 
            editModal.addEventListener('input', () => {

                // if category has only white space then the submit button will be disabled
                if (editModal.value.trim() === '') {
                    editCategorySubmitBtn.disabled = true;

                } else {

                    // if category has content then enable the button
                    editCategorySubmitBtn.disabled = false


                    // this function remove all unnecessary spaces ie which have more than one consecutive white spaces and replace special characters
                    function trimExtraSpaces(str) {
                        return str.replace(/\s+/g, ' ').replace(/[^\w\s]|_/gi, '');
                    }

                    // prevent typing the special characters
                    let actualCategory = trimExtraSpaces(editModal.value)
                    editModal.value = actualCategory

                }
            })














        </script>