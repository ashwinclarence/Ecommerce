<style>
    .img-account-profile {
        height: 10rem;
    }

    .rounded-circle {
        border-radius: 50% !important;
    }

    .card {
        box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);
    }

    .card .card-header {
        font-weight: 500;
    }

    .card-header:first-child {
        border-radius: 0.35rem 0.35rem 0 0;
    }

    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 1.35rem;
        margin-bottom: 0;
        background-color: rgba(33, 40, 50, 0.03);
        border-bottom: 1px solid rgba(33, 40, 50, 0.125);
    }

    .form-control,
    .dataTable-input {
        display: block;
        width: 100%;
        padding: 0.875rem 1.125rem;
        font-size: 0.875rem;
        font-weight: 400;
        line-height: 1;
        color: #69707a;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #c5ccd6;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 0.35rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }


    .nav-borders .nav-link.active {
        color: #0061f2;
        border-bottom-color: #0061f2;
    }

    .nav-borders .nav-link {
        color: #69707a;
        border-bottom-width: 0.125rem;
        border-bottom-style: solid;
        border-bottom-color: transparent;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        padding-left: 0;
        padding-right: 0;
        margin-left: 1rem;
        margin-right: 1rem;
    }

    .added-inner-address {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
</style>

<%- include('navbar') %>




    <!-- modal for profile update -->
    <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content p-5">
                <form id="update-profile-form" action="/update-profile" method="post">
                    <h2 class="text-center">Update Profile</h2>
                    <!-- <div class="profile-image-box">
                            <img src="../../image.png" alt="Profile Image" id="profile-image-preview-img">
                        </div> -->
                    <div>
                        <label for="profileName" class="form-label">Name</label>
                        <input type="text" class="form-control" name="name" id="profileName"
                            value="<%= userDetail.name %>">
                        <label for="profileName" class="validateUserForm text-danger" ></label>
                    </div>
                    <div>
                        <label for="profileEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="profileEmail" value="<%= userDetail.email %>"
                            disabled>
                        <label for="profileEmail" class="validateUserForm text-danger"></label>
                    </div>
                    <div>
                        <label for="profilePhone" class="form-label">Phone</label>
                        <input type="text" class="form-control" name="phone" id="profilePhone"
                            value="<%= userDetail.phone %>">
                        <label for="profilePhone" class="validateUserForm text-danger"></label>
                    </div>
                    <div class=" text-center">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button class="btn btn-primary" type="submit">Update Profile</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <!-- profile section -->
    <div class="container-xl px-4 mt-5">
        <nav class="nav nav-borders mb-5">

            <a href="/home" class="nav-link  ms-0 "><i class="fa-solid fa-house"></i>
                Home</a>
            <a href="#" class="nav-link active ms-4 "><i class="fa-solid fa-user"></i>
                Profile</a>
            <a href="/orders" class="nav-link ms-4"><i class="fa-solid fa-truck-moving"></i> Orders</a>
            <a href="/cancelled-orders" class="nav-link ms-4"><i class="fa-solid fa-ban"></i> Cancelled Orders</a>
            <a href="/wallet" class="nav-link ms-4"><i class="fa-solid fa-wallet"></i> Wallet</a>

        </nav>
        <div class="row">
            <div class="col-xl-4">
                <!-- Profile picture card-->
                <div class="card mb-4 mb-xl-0">
                    <div class="card-header">Profile</div>
                    <div class="card-body text-center">
                        <!-- Profile picture image-->
                        <img class="img-account-profile rounded-circle mb-2" src="../../image/football.png" alt="" loading="lazy">
                        <!-- Profile picture help block-->
                        <!-- <div class="small font-italic text-muted mb-4">JPG or PNG no larger than 5 MB</div> -->
                        <!-- Profile picture upload button-->
                        <div class="d-flex flex-column gap-3 mt-3">
                            <h3 class="">
                                <%= userDetail.name %>
                            </h3>
                            <h6 class="small"><i class="fa-solid fa-envelope"></i>
                                <%= userDetail.email %>
                            </h6>
                            <h6 class="small"><i class="fa-solid fa-phone"></i>
                                <%= userDetail.phone %>
                            </h6>
                            <button type="button" class="btn btn-warning" data-bs-toggle="modal"
                                data-bs-target=".bd-example-modal-lg">Update Profile</button>
                            <a href="/forget-password" class="btn btn-secondary" id="reset-password"><i
                                    class="fa-solid fa-shield-halved"></i> Forget
                                Password</a>
                            <a href="/logout" class="btn btn-danger"><i class="fa-solid fa-power-off"></i>
                                Logout</a>
                        </div>

                    </div>
                </div>


                

            </div>
            <div class="col-xl-8">
                <!-- Account details card-->
                <div class="card mb-4">
                    <div class="card-header">
                        Address
                        <% if(userDetail.address.length<4){ %>
                            <button class="btn btn-sm" type="button" data-bs-toggle="modal" title="add address"
                                data-bs-target=".add-new-address-modal" id="add-address-button"> <i
                                    class="fa-solid fa-plus"></i> </button>
                            <% }else{ %>
                                <small class="text-danger">Address limit reached</small>
                                <% } %>
                    </div>
                    <div class="card-body">

                        <% if(userDetail.address){ %>
                            <input type="text" id="address-count-index" value="<%= userDetail.address.length %>" hidden>
                            <% userDetail.address.forEach((address,index)=>{ %>
                                <div class="added-inner-address">
                                    <div class="address-content">
                                        <h5>Address <%= index+1 %>
                                        </h5>
                                        <ul>
                                            <li>Contact Name &nbsp;:
                                                <b>
                                                    <%= address.contactName %>
                                                </b>
                                            </li>
                                            <li>Pincode &nbsp;:
                                                <b>
                                                    <%= address.pincode %>
                                                </b>
                                            </li>
                                            <li>Home Address &nbsp;:
                                                <b>
                                                    <%= address.homeAddress %>
                                                </b>
                                            </li>
                                            <li>Area Address &nbsp;:
                                                <b>
                                                    <%= address.areaAddress %>
                                                </b>
                                            </li>
                                            <li>LandMark &nbsp;:
                                                <b>
                                                    <%= address.landmark %>
                                                </b>
                                            </li>
                                        </ul>
                                    </div>
                                    <div class="address-actions">
                                        <!-- edit the address -->
                                        <button class="btn btn-warning" type="button" data-bs-toggle="modal"
                                            data-bs-target=".edit-address-modal" id="edit-address-button"
                                            data-address=" <%= address %>" data-index="<%= index %>">
                                            <i class="fa-solid fa-pen"></i></button>
                                        <button class="btn btn-danger" onclick="deleteAddress('<%= index %>')"><i
                                                class="fa-solid fa-trash"></i></button>
                                    </div>
                                </div>
                                <hr>
                                <% }) %>
                                    <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>





    <!-- new address adding modal -->
    <div class="modal fade add-new-address-modal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content ">
                <div class="modal-body p-5">
                    <form action="/add-address" method="post" id="add-address-form">
                        <h2 class="text-center">Add Address</h2>
                        <div>
                            <label for="contact-name" class="form-label">Contact user name</label>
                            <input type="text" name="username" id="contact-name" class="form-control">
                            <label for="contact-name" class="validate-user-address text-danger"></label>
                        </div>
                        <div>
                            <label for="address-pincode" class="form-label">Pincode</label>
                            <input type="text" name="pincode" id="address-pincode" placeholder="XXXXXX"
                                class="form-control">
                            <label for="address-pincode" class="validate-user-address text-danger"></label>
                        </div>
                        <div>
                            <label for="address-house" class="form-label">Flat, House no., Building, Company,
                                Apartment</label>
                            <input type="text" name="addressHome" id="address-house" maxlength="100"
                                class="form-control">
                            <label for="address-house" class="validate-user-address text-danger"></label>
                        </div>
                        <div>
                            <label for="address-area" class="form-label">Area, Street, Sector, Village</label>
                            <input type="text" name="addressArea" id="address-area" maxlength="100"
                                class="form-control">
                            <label for="address-area" class="validate-user-address text-danger"></label>
                        </div>

                        <div>
                            <label for="address-landmark" class="form-label">Landmark</label>
                            <input type="text" name="addressLandmark" id="address-landmark" maxlength="100"
                                placeholder="near international airport" class="form-control">
                            <label for="address-landmark" class="validate-user-address text-danger"></label>
                        </div>
                        <div class="text-center">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>

                            <button class="btn btn-success" type="submit">Add Address</button>
                        </div>


                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- end of modal for adding new address -->

    <!-- edit address modal -->
    <div class="modal fade edit-address-modal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content ">
                <div class="modal-body">
                    <form action="/edit-address-checkout" method="post" id="edit-address-form">
                        <h2 class="text-center">Edit Address</h2>
                        <div>
                            <label for="contact-name" class="form-label">Contact user name</label>
                            <input type="text" class="form-control" name="name" id="contact-name">
                            <label for="contact-name" class="validate-user-address"></label>
                        </div>
                        <div>
                            <label for="address-pincode" class="form-label">Pincode</label>
                            <input type="text" class="form-control" name="pincode" id="address-pincode">
                            <label for="address-pincode" class="validate-user-address"></label>
                        </div>
                        <div>
                            <label for="address-house" class="form-label">Flat, House no., Building, Company,
                                Apartment</label>
                            <input type="text" class="form-control" name="addressHome" id="address-house"
                                maxlength="100">
                            <label for="address-house" class="validate-user-address"></label>
                        </div>
                        <div>
                            <label for="address-area" class="form-label">Area, Street, Sector, Village</label>
                            <input type="text" class="form-control" name="addressArea" id="address-area"
                                maxlength="100">
                            <label for="address-area" class="validate-user-address"></label>
                        </div>

                        <div>
                            <label for="address-landmark" class="form-label">Landmark</label>
                            <input type="text" class="form-control" name="addressLandmark" id="address-landmark"
                                maxlength="100">
                            <label for="address-landmark" class="validate-user-address"></label>
                        </div>
                        <!-- hidden field for storing the index of the  -->
                        <input type="text" name="addressIndex" id="address-index" hidden>
                        <div class="text-center">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>

                            <button class="btn btn-success" type="submit">Edit Address</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- end of modal for edit address -->


    <%- include('footer') %>

        <script>
            // validation for adding address 
            const addressForm = document.getElementById('add-address-form')
            const contactName = document.getElementsByName('username')[0]
            const pincode = document.getElementsByName('pincode')[0]
            const homeAddress = document.getElementsByName('addressHome')[0]
            const areaAddress = document.getElementsByName('addressArea')[0]
            const landmark = document.getElementsByName('addressLandmark')[0]

            // validation for adding new address
            addressForm.addEventListener('submit', (e) => {
                e.preventDefault();

                document.getElementsByClassName('validate-user-address')[0].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[1].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[2].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[3].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[4].innerHTML = ""

                let isvalid = true;
                let validateMessage = ""
                const userNameRegex = /^[a-zA-Z\s]+$/;

                // check name is empty and it's only having number
                if (contactName.value.trim() === "" || !userNameRegex.test(contactName.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[0].innerHTML = "Enter a valid name"
                }
                // check pincode
                if (pincode.value.length > 6 || isNaN(pincode.value) || pincode.value.length <= 0) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[1].innerHTML = "Enter a valid Pincode with six digits"
                }
                // validate home address
                if (homeAddress.value.length > 100 || homeAddress.value.length < 20 || !isNaN(homeAddress.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[2].innerHTML = "Enter a valid home address between 20 and 100 characters"
                }
                // validate area address
                if (areaAddress.value.length > 100 || areaAddress.value.length < 10 || !isNaN(areaAddress.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[3].innerHTML = "Enter a valid area address between 10 and 100 characters"
                }
                // validate landmark
                if (landmark.value.length > 50 || !isNaN(landmark.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[4].innerHTML = "Enter a valid landmark with maximum 50 characters"
                }

                // if form is valid then the form is submitted
                if (isvalid) {
                    addressForm.submit()
                }
            })



            // confirmation for resetting password
            document.getElementById('reset-password').addEventListener('click', (e) => {
                e.preventDefault()
                Swal.fire({
                    icon: "question",
                    title: "Reset password",
                    text: "Are you sure want to reset your password",
                    showCancelButton: true,
                }).then((result) => {
                    // if okay button is clicked then redirect to the link in href
                    if (result.isConfirmed) {
                        window.location.href = e.target.href;
                    }
                })
            })


            // if the address limit of 4 reached and the user is tried to add new address then an alert will be fired
            // a hidden input field holds the number of address in the ejs and the value is used below
            const addressCount = document.getElementById('address-count-index').value
            const addAddressButton = document.getElementById('add-address-button')
            addAddressButton.addEventListener('click', (e) => {
                e.preventDefault();
                // if the address count reaches greater than or equals to 4 then alert message is fired and page is refreshed
                if (parseInt(addressCount) >= 4) {
                    Swal.fire({
                        icon: "info",
                        title: "Address limit reached",
                        text: "Maximum address limit reached.",
                        showConfirmButton: false,
                        timer: 2500
                    }).then(() => {
                        // reload the page to hide the modal from adding again
                        window.location.reload()
                    })
                }
            })




            // delete address confirmation message
            function deleteAddress(index) {
                Swal.fire({
                    icon: "question",
                    title: "Delete Address",
                    text: "Are you sure want to delete the address ?",
                    showCancelButton: true,
                }).then((result) => {
                    if (result.isConfirmed) {
                        const URL = `/delete-address/${index}`
                        fetch(URL, {
                            method: "DELETE",
                            headers: {
                                "Content-Type": "application.json"
                            }
                        }).then((res) => {
                            if (res.ok) {
                                window.location.reload()
                            }
                            return res.json()

                        }).then((data) => {

                        }).catch((err) => {
                            console.log("Error on deleting user address", err);
                        })
                    }
                })
            }



            // function to display the selected image on the profile container
            function showImagePreview(event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        document.getElementById('profile-image-preview-img').src = e.target.result;
                    };
                    reader.readAsDataURL(file);
                }
            }


            // validate the user profile update
            const updatedUserForm = document.getElementById('update-profile-form')
            const updateUserName = document.getElementById('profileName')
            const updateUserPhone = document.getElementById('profilePhone')

            updatedUserForm.addEventListener('submit', (e) => {
                e.preventDefault()
                document.getElementsByClassName('validateUserForm')[0].innerHTML = ""
                document.getElementsByClassName('validateUserForm')[2].innerHTML = ""

                let validForm = true

                const userNameRegex = /^[a-zA-Z\s]+$/;
                if (updateUserName.value.trim() === '' || updateUserName.value.length > 50 || !userNameRegex.test(updateUserName.value)) {
                    validForm = false;
                    document.getElementsByClassName('validateUserForm')[0].innerHTML = "Please enter a valid username that contains only letters and is not empty.";
                }
                if (updateUserPhone.value.length != 10 || isNaN(updateUserPhone.value)) {
                    validForm = false
                    document.getElementsByClassName('validateUserForm')[2].innerHTML = "Please enter a valid phone number"
                }
                if (validForm) {
                    updatedUserForm.submit()
                }
            })


            // edit address- add selected address field on the edit address form field
            const editAddressForm = document.getElementById('edit-address-form')
            const contactNameEdit = document.getElementsByName('name')[1]
            const pincodeEdit = document.getElementsByName('pincode')[1]
            const homeAddressEdit = document.getElementsByName('addressHome')[1]
            const areaAddressEdit = document.getElementsByName('addressArea')[1]
            const landmarkEdit = document.getElementsByName('addressLandmark')[1]
            const addressIndexEdit = document.getElementsByName('addressIndex')[0]


            document.querySelectorAll('#edit-address-button').forEach((button) => {
                button.addEventListener('click', (e) => {


                    document.getElementsByClassName('validate-user-address')[5].innerHTML = ""
                    document.getElementsByClassName('validate-user-address')[6].innerHTML = ""
                    document.getElementsByClassName('validate-user-address')[7].innerHTML = ""
                    document.getElementsByClassName('validate-user-address')[8].innerHTML = ""
                    document.getElementsByClassName('validate-user-address')[9].innerHTML = ""

                    // Get the address data from the data-address attribute
                    let addressDataString = button.getAttribute('data-address');
                    let addressIndex = button.getAttribute('data-index');


                    // Convert the object-like string to a valid JSON string
                    addressDataString = addressDataString
                        .replace(/'/g, '"') // Replace single quotes with double quotes
                        .replace(/(\w+):/g, '"$1":'); // Add double quotes around keys

                    // Parse the JSON string to an object
                    const addressData = JSON.parse(addressDataString);

                    contactNameEdit.value = addressData.contactName;
                    pincodeEdit.value = addressData.pincode;
                    homeAddressEdit.value = addressData.homeAddress;
                    areaAddressEdit.value = addressData.areaAddress;
                    landmarkEdit.value = addressData.landmark;
                    addressIndexEdit.value = parseInt(addressIndex)

                    // change the edit address form action
                    editAddressForm.setAttribute('action', `/edit-address-profile/${parseInt(addressIndex)}`)
                });
            });



            // validation for adding new address
            editAddressForm.addEventListener('submit', (e) => {
                e.preventDefault();

                document.getElementsByClassName('validate-user-address')[5].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[6].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[7].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[8].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[9].innerHTML = ""

                let isvalid = true;
                let validateMessage = ""
                const userNameRegex = /^[a-zA-Z\s]+$/;

                // check name is empty and it's only having number
                if (contactNameEdit.value.trim() === "" || !userNameRegex.test(contactNameEdit.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[5].innerHTML = "Enter a valid name"
                }
                // check pincode
                if (pincodeEdit.value.length > 6 || isNaN(pincodeEdit.value) || pincodeEdit.value.length <= 0) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[6].innerHTML = "Enter a valid Pincode with six digits"
                }
                // validate home address
                if (homeAddressEdit.value.length > 100 || homeAddressEdit.value.length < 20 || !isNaN(homeAddressEdit.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[7].innerHTML = "Enter a valid home address between 20 and 100 characters"
                }
                // validate area address
                if (areaAddressEdit.value.length > 100 || areaAddressEdit.value.length < 10 || !isNaN(areaAddressEdit.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[8].innerHTML = "Enter a valid area address between 10 and 100 characters"
                }
                // validate landmark
                if (landmarkEdit.value.length > 50 || !isNaN(landmarkEdit.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[9].innerHTML = "Enter a valid landmark with maximum 50 characters"
                }

                // if form is valid then the form is submitted
                if (isvalid) {

                    editAddressForm.submit()
                }
            })


        </script>