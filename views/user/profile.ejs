<style>
    .profile-container {
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 3rem;
        padding: 5rem 0;
    }

    .profile-box {
        width: 100%;
        display: flex;
        flex-direction: row;
        border: 2px solid #e1e0e0;
        background: url('../../image/profile-banner2.png');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        border-radius: 10px;
        padding: 2rem;
        gap: 3rem;
    }

    .left-profile-box {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 1rem;

    }

    .profile-image-box {
        width: 250px;
        height: 250px;
        /* border-radius: 50%; */
        overflow: hidden;
        /* background-color: #ffffff; */

    }

    .profile-image-box img {
        width: 250px;
        height: 250px;
        object-fit: contain;
    }

    .right-profile-box {
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: 1rem;

    }

    /* add address modal */

    #add-address-form {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        padding: 2rem;
    }

    #add-address-form input {
        padding: .5rem;
        border: 1px solid #aaaaaa;
        border-radius: 5px;
    }

    .add-address-box {
        display: flex;
        flex-direction: column;
    }

    .added-address-details {
        display: grid;
        grid-template-columns: auto auto;
        gap: 2rem;
    }

    .added-inner-address {
        display: flex;
        justify-content: space-between;
        gap: 2rem;
        border: 2px solid #aaaaaa;
        padding: 10px;
        border-radius: 10px;
    }

    .profile-add-address-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 3rem;
    }

    .address-actions {
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: 1rem;
    }

    .profile-actions {
        display: flex;
        justify-content: space-evenly;
        width: 100%;
        gap: 4rem;
        padding: 3rem 0;
    }

    #update-profile-form {
        padding: 2rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 2rem;
    }

    #update-profile-form input {
        width: 90%;
        height: 2rem;
    }

    .validateUserForm {
        color: red;
    }
</style>

<%- include('navbar') %>

    <div class="profile-container container">
        <div class="profile-box">
            <div class="left-profile-box">
                <div class="profile-image-box">
                    <img src="../../image/football.png" alt="">
                </div>
                <button type="button" class="btn btn-warning" data-toggle="modal"
                    data-target=".bd-example-modal-lg">Update Profile</button>

            </div>
            <div class="right-profile-box">
                <h1>
                    <%= userDetail.name %>
                </h1>
                <h6><i class="fa-solid fa-envelope"></i>
                    <%= userDetail.email %>
                </h6>
                <h6><i class="fa-solid fa-phone"></i>
                    <%= userDetail.phone %>
                </h6>
                <!-- <h6><i class="fa-solid fa-location-dot"></i> location</h6> -->
            </div>
        </div>

        <!-- modal for profile update -->
        <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel"
            aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <form class="row g-2 needs-validation d-flex flex-column align-items-center"
                        id="update-profile-form" action="/user/update-profile" method="post">
                        <h2 class="text-center">Update Profile</h2>
                        <!-- <div class="profile-image-box">
                            <img src="../../image/user.png" alt="Profile Image" id="profile-image-preview-img">
                        </div> -->
                        <div class="col-md-10">
                            <label for="profileName" class="form-label">Name</label>
                            <input type="text" class="form-control" name="name" id="profileName"
                                value="<%= userDetail.name %>">
                            <small class="validateUserForm"></small>
                        </div>
                        <div class="col-md-10">
                            <label for="profileEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="profileEmail" value="<%= userDetail.email %>"
                                disabled>
                        </div>
                        <div class="col-md-10">
                            <label for="profilePhone" class="form-label">Phone</label>
                            <input type="text" class="form-control" name="phone" id="profilePhone"
                                value="<%= userDetail.phone %>">
                            <small class="validateUserForm"></small>
                        </div>
                        <div class="col-12 text-center">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button class="btn btn-primary" type="submit">Update Profile</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>


        <!-- second row of profile page with user address -->
        <div class="profile-add-address-container">
            <div class="profile-actions">
                <!-- button for showing the modal of adding new address-->
                <button class="btn btn-outline-secondary border-2" type="button" data-toggle="modal"
                    data-target=".add-new-address-modal" id="add-address-button">Add
                    address</button>
                <a href="/user/orders" class="btn btn-outline-secondary border-2">View Orders</a>
                <a href="/user/cancelled-orders" class="btn btn-outline-secondary border-2">Cancelled Orders</a>
                <a href="/user/forget-password" class="btn btn-outline-secondary border-2" id="reset-password">Reset
                    Password</a>
            </div>

            <!-- address section -->
            <div class="added-address-details">

                <% if(userDetail.address){ %>
                    <input type="text" id="address-count-index" value="<%= userDetail.address.length %>" hidden>
                    <% userDetail.address.forEach((address,index)=>{ %>
                        <div class="added-inner-address">
                            <div class="address-content">
                                <h5>Address <%= index+1 %>
                                </h5>
                                <ul>
                                    <li>Contact Name &nbsp;:
                                        <b>
                                            <%= address.contactName %>
                                        </b>
                                    </li>
                                    <li>Pincode &nbsp;:
                                        <b>
                                            <%= address.pincode %>
                                        </b>
                                    </li>
                                    <li>Home Address &nbsp;:
                                        <b>
                                            <%= address.homeAddress %>
                                        </b>
                                    </li>
                                    <li>Area Address &nbsp;:
                                        <b>
                                            <%= address.areaAddress %>
                                        </b>
                                    </li>
                                    <li>LandMark &nbsp;:
                                        <b>
                                            <%= address.landmark %>
                                        </b>
                                    </li>
                                </ul>
                            </div>
                            <div class="address-actions">
                                <!-- edit the address -->

                                <a href="/user/edit-address/?addressNumber=<%= index %>" class="btn btn-warning"><i
                                        class="fa-solid fa-pen"></i></a>
                                <a href="/user/delete-address/<%= index %>"
                                    class="btn btn-danger delete-address-button"><i class="fa-solid fa-trash"></i></a>
                            </div>
                        </div>
                        <% }) %>
                            <% } %>

            </div>
            <!-- end of address section -->


            <!-- new address adding modal -->
            <div class="modal fade add-new-address-modal" tabindex="-1" role="dialog"
                aria-labelledby="myLargeModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content ">
                        <div class="modal-body">
                            <form action="/user/add-address" method="post" id="add-address-form">
                                <h2 class="text-center">Add Address</h2>
                                <div class="add-address-box">
                                    <label for="contact-name">Contact user name</label>
                                    <input type="text" name="name" id="contact-name">
                                    <label for="contact-name" class="validate-user-address"></label>
                                </div>
                                <div class="add-address-box">
                                    <label for="address-pincode">Pincode</label>
                                    <input type="text" name="pincode" id="address-pincode" placeholder="XXXXXX">
                                    <label for="address-pincode" class="validate-user-address"></label>
                                </div>
                                <div class="add-address-box">
                                    <label for="address-house">Flat, House no., Building, Company, Apartment</label>
                                    <input type="text" name="addressHome" id="address-house" maxlength="100">
                                    <label for="address-house" class="validate-user-address"></label>
                                </div>
                                <div class="add-address-box">
                                    <label for="address-area">Area, Street, Sector, Village</label>
                                    <input type="text" name="addressArea" id="address-area" maxlength="100">
                                    <label for="address-area" class="validate-user-address"></label>
                                </div>

                                <div class="add-address-box">
                                    <label for="address-landmark">Landmark</label>
                                    <input type="text" name="addressLandmark" id="address-landmark" maxlength="100"
                                        placeholder="near international airport">
                                    <label for="address-landmark" class="validate-user-address"></label>
                                </div>
                                <div class="text-center">
                                    <button type="button" class="btn btn-secondary"
                                        data-dismiss="modal">Cancel</button>

                                    <button class="btn btn-success" type="submit">Add Address</button>
                                </div>


                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <!-- end of modal for adding new address -->

        </div>
    </div>

    <%- include('footer') %>

        <script>
            // validation for adding address 
            const addressForm = document.getElementById('add-address-form')
            const contactName = document.getElementsByName('name')[0]
            const pincode = document.getElementsByName('pincode')[0]
            const homeAddress = document.getElementsByName('addressHome')[0]
            const areaAddress = document.getElementsByName('addressArea')[0]
            const landmark = document.getElementsByName('addressLandmark')[0]

            // validation for adding new address
            addressForm.addEventListener('submit', (e) => {
                e.preventDefault();

                document.getElementsByClassName('validate-user-address')[0].innerHTML=""
                document.getElementsByClassName('validate-user-address')[1].innerHTML=""
                document.getElementsByClassName('validate-user-address')[2].innerHTML=""
                document.getElementsByClassName('validate-user-address')[3].innerHTML=""
                document.getElementsByClassName('validate-user-address')[4].innerHTML=""

                let isvalid = true;
                let validateMessage = ""
                const userNameRegex = /^[a-zA-Z\s]+$/;

                // check name is empty and it's only having number
                if (contactName.value.trim() === "" || !userNameRegex.test(contactName.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[0].innerHTML = "Enter a valid name"
                }
                // check pincode
                 if (pincode.value.length > 6 || isNaN(pincode.value) || pincode.value.length <= 0) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[1].innerHTML = "Enter a valid Pincode with six digits"
                }
                // validate home address
                 if (homeAddress.value.length > 100 || homeAddress.value.length < 20 || !isNaN(homeAddress.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[2].innerHTML = "Enter a valid home address between 20 and 100 characters"
                }
                // validate area address
                 if (areaAddress.value.length > 100 || areaAddress.value.length < 10 || !isNaN(areaAddress.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[3].innerHTML = "Enter a valid area address between 10 and 100 characters"
                }
                // validate landmark
                 if (landmark.value.length > 50 || !isNaN(landmark.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[4].innerHTML = "Enter a valid landmark with maximum 50 characters"
                }

                // if form is valid then the form is submitted
                if (isvalid) {
                    addressForm.submit()
                }
            })



            // confirmation for resetting password
            document.getElementById('reset-password').addEventListener('click', (e) => {
                e.preventDefault()
                Swal.fire({
                    icon: "question",
                    title: "Reset password",
                    text: "Are you sure want to reset your password",
                    showCancelButton: true,
                }).then((result) => {
                    // if okay button is clicked then redirect to the link in href
                    if (result.isConfirmed) {
                        window.location.href = e.target.href;
                    }
                })
            })


            // if the address limit of 4 reached and the user is tried to add new address then an alert will be fired
            // a hidden input field holds the number of address in the ejs and the value is used below
            const addressCount = document.getElementById('address-count-index').value
            const addAddressButton = document.getElementById('add-address-button')
            addAddressButton.addEventListener('click', (e) => {
                e.preventDefault();
                // if the address count reaches greater than or equals to 4 then alert message is fired and page is refreshed
                if (parseInt(addressCount) >= 4) {
                    Swal.fire({
                        icon: "info",
                        title: "Address limit reached",
                        text: "Maximum address limit reached.",
                        showConfirmButton: false,
                        timer: 2500
                    }).then(() => {
                        // reload the page to hide the modal from adding again
                        window.location.reload()
                    })
                }
            })




            // delete address confirmation message
            const deleteAddressButton = document.querySelectorAll('.delete-address-button')
            deleteAddressButton.forEach((button) => {
                button.addEventListener('click', (e) => {
                    e.preventDefault();
                    Swal.fire({
                        icon: "question",
                        title: "Delete Address",
                        text: "Are you sure want to delete the address ?",
                        showCancelButton: true,
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = e.target.href;
                        }
                    })
                })
            })



            // function to display the selected image on the profile container
            function showImagePreview(event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        document.getElementById('profile-image-preview-img').src = e.target.result;
                    };
                    reader.readAsDataURL(file);
                }
            }


            // validate the user profile update
            const updatedUserForm = document.getElementById('update-profile-form')
            const updateUserName = document.getElementById('profileName')
            const updateUserPhone = document.getElementById('profilePhone')

            updatedUserForm.addEventListener('submit', (e) => {
                e.preventDefault()
                document.getElementsByClassName('validateUserForm')[0].innerHTML = ""
                document.getElementsByClassName('validateUserForm')[1].innerHTML = ""

                let validForm = true

                const userNameRegex = /^[a-zA-Z\s]+$/;
                if (updateUserName.value.trim() === '' || updateUserName.value.length > 50 || !userNameRegex.test(updateUserName.value)) {
                    validForm = false;
                    document.getElementsByClassName('validateUserForm')[0].innerHTML = "Please enter a valid username that contains only letters and is not empty.";
                }
                if (updateUserPhone.value.length != 10 || isNaN(updateUserPhone.value)) {
                    validForm = false
                    document.getElementsByClassName('validateUserForm')[1].innerHTML = "Please enter a valid phone number"
                }
                if (validForm) {
                    updatedUserForm.submit()
                }
            })


        </script>