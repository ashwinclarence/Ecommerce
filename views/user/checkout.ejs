<style>
    .checkout-container {
        padding: 4rem 0;
        min-height: 100vh;
    }

    .card {
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0 solid rgba(0, 0, 0, .125);
        border-radius: 1rem;
    }

    .card-body {
        -webkit-box-flex: 1;
        -ms-flex: 1 1 auto;
        flex: 1 1 auto;
        padding: 1.5rem 1.5rem;
    }

    .image-container-checkout {
        width: 100px;
        height: 100px;
        overflow: hidden;
    }

    .image-container-checkout img {
        width: 100px;
        height: 100px;
        object-fit: contain;
    }

    .product-name-checkout {
        width: 300px;
        text-overflow: ellipsis;
    }

    .address-table tr {
        display: grid;
        grid-template-columns: 20% 5% 75%;
    }

    /* add address modal */

    #add-address-form {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        padding: 2rem;
    }

    #add-address-form input {
        padding: .5rem;
        border: 1px solid #aaaaaa;
        border-radius: 5px;
    }

    #edit-address-form {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        padding: 2rem;
    }

    #edit-address-form input {
        padding: .5rem;
        border: 1px solid #aaaaaa;
        border-radius: 5px;
    }

    .add-address-box {
        display: flex;
        flex-direction: column;
    }

    .validate-user-address {
        color: red;
    }

    .payment-flex {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
    }
    .payment-box{
        display: flex;
        align-items: center;
    }
</style>



<%- include('secondaryNavbar') %>
    <div class="checkout-container container">
        <h1 class="h3 mb-5">Checkout</h1>
        <div class="row">
            <!-- left side -->
            <div class="accordion col-lg-9" id="accordionExample">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse"
                            data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            <h4>Delivery Address</h4>
                        </button>
                    </h2>
                    <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne"
                        data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                            <% if(addressData.length<4){ %>
                                <div class="text-center m-5">
                                    <button class="btn btn-primary " type="button" data-toggle="modal"
                                        data-target=".add-new-address-modal" id="add-address-button">Add
                                        address</button>
                                </div>
                                <% } %>


                                    <% addressData.forEach((address,index)=>{ %>
                                        <div class="form-check mt-4" id="address-<%= index %>">
                                            <input class="form-check-input checkout-address" type="radio"
                                                name="checkoutAddress" id="checkout-address" value="<%= index %>" />
                                            <!-- inner -->
                                            <div class="border border-3 rounded p-3 table-responsive"
                                                for="checkout-address">
                                                <strong>
                                                    <%= address.contactName %>
                                                </strong>
                                                <table class="table address-table">
                                                    <tr>
                                                        <td>pincode</td>
                                                        <td>:</td>
                                                        <td>
                                                            <%= address.pincode %>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>Home Address</td>
                                                        <td>:</td>
                                                        <td>
                                                            <%= address.homeAddress %>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>Area Address</td>
                                                        <td>:</td>
                                                        <td>
                                                            <%= address.areaAddress %>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>LandMark</td>
                                                        <td>:</td>
                                                        <td>
                                                            <%= address.landmark %>
                                                        </td>
                                                    </tr>

                                                </table>

                                                <!-- address action buttons -->
                                                <button class="btn btn-warning btn-sm" type="button" data-toggle="modal"
                                                    data-target=".edit-address-modal" id="edit-address-button"
                                                    data-address=" <%= address %>" data-index="<%= index %>">Edit
                                                    address</button>
                                                <button class="btn btn-danger btn-sm"
                                                    onclick="deleteAddress('<%=index%>')">Delete
                                                    Address</button>
                                            </div>
                                        </div>
                                        <% }) %>



                        </div>
                    </div>
                </div>
                <!-- end of first accordion -->

                <!-- new address adding modal -->
                <div class="modal fade add-new-address-modal" tabindex="-1" role="dialog"
                    aria-labelledby="myLargeModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content ">
                            <div class="modal-body">
                                <form action="/user/add-address-checkout" method="post" id="add-address-form">
                                    <h2 class="text-center">Add Address</h2>
                                    <div class="add-address-box">
                                        <label for="contact-name">Contact user name</label>
                                        <input type="text" name="name" id="contact-name">
                                        <label for="contact-name" class="validate-user-address"></label>
                                    </div>
                                    <div class="add-address-box">
                                        <label for="address-pincode">Pincode</label>
                                        <input type="text" name="pincode" id="address-pincode" placeholder="xxxxxx">
                                        <label for="address-pincode" class="validate-user-address"></label>
                                    </div>
                                    <div class="add-address-box">
                                        <label for="address-house">Flat, House no., Building, Company, Apartment</label>
                                        <input type="text" name="addressHome" id="address-house" maxlength="100">
                                        <label for="address-house" class="validate-user-address"></label>
                                    </div>
                                    <div class="add-address-box">
                                        <label for="address-area">Area, Street, Sector, Village</label>
                                        <input type="text" name="addressArea" id="address-area" maxlength="100">
                                        <label for="address-area" class="validate-user-address"></label>
                                    </div>

                                    <div class="add-address-box">
                                        <label for="address-landmark">Landmark</label>
                                        <input type="text" name="addressLandmark" id="address-landmark" maxlength="100"
                                            placeholder="near international airport">
                                        <label for="address-landmark" class="validate-user-address"></label>
                                    </div>
                                    <div class="text-center">
                                        <button type="button" class="btn btn-secondary"
                                            data-dismiss="modal">Cancel</button>

                                        <button class="btn btn-success" type="submit">Add Address</button>
                                    </div>


                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- end of modal for adding new address -->


                <!-- edit address modal -->
                <div class="modal fade edit-address-modal" tabindex="-1" role="dialog"
                    aria-labelledby="myLargeModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content ">
                            <div class="modal-body">
                                <form action="/user/edit-address-checkout" method="post" id="edit-address-form">
                                    <h2 class="text-center">Edit Address</h2>
                                    <div class="add-address-box">
                                        <label for="contact-name">Contact user name</label>
                                        <input type="text" name="name" id="contact-name">
                                        <label for="contact-name" class="validate-user-address"></label>
                                    </div>
                                    <div class="add-address-box">
                                        <label for="address-pincode">Pincode</label>
                                        <input type="text" name="pincode" id="address-pincode">
                                        <label for="address-pincode" class="validate-user-address"></label>
                                    </div>
                                    <div class="add-address-box">
                                        <label for="address-house">Flat, House no., Building, Company, Apartment</label>
                                        <input type="text" name="addressHome" id="address-house" maxlength="100">
                                        <label for="address-house" class="validate-user-address"></label>
                                    </div>
                                    <div class="add-address-box">
                                        <label for="address-area">Area, Street, Sector, Village</label>
                                        <input type="text" name="addressArea" id="address-area" maxlength="100">
                                        <label for="address-area" class="validate-user-address"></label>
                                    </div>

                                    <div class="add-address-box">
                                        <label for="address-landmark">Landmark</label>
                                        <input type="text" name="addressLandmark" id="address-landmark" maxlength="100">
                                        <label for="address-landmark" class="validate-user-address"></label>
                                    </div>
                                    <!-- hidden field for storing the index of the  -->
                                    <input type="text" name="addressIndex" id="address-index" hidden>
                                    <div class="text-center">
                                        <button type="button" class="btn btn-secondary"
                                            data-dismiss="modal">Cancel</button>

                                        <button class="btn btn-success" type="submit">Edit Address</button>
                                    </div>


                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- end of modal for edit address -->


                <!-- second accordion -->
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingThree">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                            data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                            <h4>Selected items</h4>
                        </button>
                    </h2>
                    <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree"
                        data-bs-parent="#accordionExample">
                        <div class="accordion-body">

                            <table class="table">

                                <tr class="text-center">
                                    <th>Sl.no</th>
                                    <th>Image</th>
                                    <th>Name</th>
                                    <th>Brand</th>
                                    <th>Price</th>
                                    <th>Category</th>
                                    <th>Quantity</th>
                                </tr>

                                <% cartItems.forEach((product,index)=>{ %>
                                    <tr class="text-center">
                                        <th>
                                            <%= index+1 %>
                                        </th>
                                        <td class="image-container-checkout"><img
                                                src="../../<%= product.productID.productImage[0] %>" alt=""
                                                class="image-fluid"></td>
                                        <td class="product-name-checkout">
                                            <%= product.productID.productName %>
                                        </td>
                                        <td>
                                            <%= product.productID.productBrand %>
                                        </td>
                                        <% if(product.productID.productDiscount===0){ %>
                                            <td>&#8377;
                                                <%= product.productID.productPrice %>
                                            </td>
                                            <% }else { %>
                                                <td>&#8377;
                                                    <%= Math.round(product.productID.productPrice-((product.productID.productDiscount/100)*product.productID.productPrice))
                                                        %>
                                                </td>
                                                <% }%>
                                                    <td>
                                                        <%= product.productID.productCategory %>
                                                    </td>
                                                    <td class="text-center">
                                                        <%= product.productCount %>
                                                    </td>
                                    </tr>
                                    <% }) %>
                            </table>


                        </div>
                    </div>
                </div>
                <!-- end of second accordion -->

                <!-- third accordion -->
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingTwo">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                            data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            <h4>Select a payment method </h4>
                        </button>
                    </h2>
                    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo"
                        data-bs-parent="#accordionExample">
                        <div class="accordion-body">

                            <!-- first radio -->
                            <div class="form-check mt-3 payment-box">
                                <input class="form-check-input payment-method-cod" type="radio" name="paymentMethod"
                                    id="payment-method-cod" value="0" />
                                <div class="form-check-label payment-flex" for="payment-method-cod">
                                    <span>Cash On Delivery </span>
                                 
                                </div>
                            </div>
                            <!-- second radio -->
                            <div class="form-check mt-3 payment-box">
                                <input class="form-check-input payment-method-cod" type="radio" name="paymentMethod"
                                    id="payment-method-cod" value="1" />
                                <div class="form-check-label payment-flex" for="payment-method-cod">
                                    <span>Razorpay</span>
                                    <svg fill="#072654" height="50" viewBox=".8 .48 1894.74 400.27" width="100"
                                        xmlns="http://www.w3.org/2000/svg">
                                        <path d="m122.63 105.7-15.75 57.97 90.15-58.3-58.96 219.98 59.88.05 87.1-324.92"
                                            fill="#3395ff" />
                                        <path
                                            d="m25.6 232.92-24.8 92.48h122.73l50.22-188.13zm426.32-81.42c-3 11.15-8.78 19.34-17.4 24.57-8.6 5.22-20.67 7.84-36.25 7.84h-49.5l17.38-64.8h49.5c15.56 0 26.25 2.6 32.05 7.9s7.2 13.4 4.22 24.6m51.25-1.4c6.3-23.4 3.7-41.4-7.82-54-11.5-12.5-31.68-18.8-60.48-18.8h-110.47l-66.5 248.1h53.67l26.8-100h35.2c7.9 0 14.12 1.3 18.66 3.8 4.55 2.6 7.22 7.1 8.04 13.6l9.58 82.6h57.5l-9.32-77c-1.9-17.2-9.77-27.3-23.6-30.3 17.63-5.1 32.4-13.6 44.3-25.4a92.6 92.6 0 0 0 24.44-42.5m130.46 86.4c-4.5 16.8-11.4 29.5-20.73 38.4-9.34 8.9-20.5 13.3-33.52 13.3-13.26 0-22.25-4.3-27-13-4.76-8.7-4.92-21.3-.5-37.8s11.47-29.4 21.17-38.7 21.04-13.95 34.06-13.95c13 0 21.9 4.5 26.4 13.43 4.6 8.97 4.7 21.8.2 38.5zm23.52-87.8-6.72 25.1c-2.9-9-8.53-16.2-16.85-21.6-8.34-5.3-18.66-8-30.97-8-15.1 0-29.6 3.9-43.5 11.7s-26.1 18.8-36.5 33-18 30.3-22.9 48.4c-4.8 18.2-5.8 34.1-2.9 47.9 3 13.9 9.3 24.5 19 31.9 9.8 7.5 22.3 11.2 37.6 11.2a82.4 82.4 0 0 0 35.2-7.7 82.11 82.11 0 0 0 28.4-21.2l-7 26.16h51.9l47.39-176.77h-52zm238.65 0h-150.93l-10.55 39.4h87.82l-116.1 100.3-9.92 37h155.8l10.55-39.4h-94.1l117.88-101.8m142.4 52c-4.67 17.4-11.6 30.48-20.75 39-9.15 8.6-20.23 12.9-33.24 12.9-27.2 0-36.14-17.3-26.86-51.9 4.6-17.2 11.56-30.13 20.86-38.84 9.3-8.74 20.57-13.1 33.82-13.1 13 0 21.78 4.33 26.3 13.05 4.52 8.7 4.48 21.67-.13 38.87m30.38-80.83c-11.95-7.44-27.2-11.16-45.8-11.16-18.83 0-36.26 3.7-52.3 11.1a113.09 113.09 0 0 0 -41 32.06c-11.3 13.9-19.43 30.2-24.42 48.8-4.9 18.53-5.5 34.8-1.7 48.73 3.8 13.9 11.8 24.6 23.8 32 12.1 7.46 27.5 11.17 46.4 11.17 18.6 0 35.9-3.74 51.8-11.18 15.9-7.48 29.5-18.1 40.8-32.1 11.3-13.94 19.4-30.2 24.4-48.8s5.6-34.84 1.8-48.8c-3.8-13.9-11.7-24.6-23.6-32.05m185.1 40.8 13.3-48.1c-4.5-2.3-10.4-3.5-17.8-3.5-11.9 0-23.3 2.94-34.3 8.9-9.46 5.06-17.5 12.2-24.3 21.14l6.9-25.9-15.07.06h-37l-47.7 176.7h52.63l24.75-92.37c3.6-13.43 10.08-24 19.43-31.5 9.3-7.53 20.9-11.3 34.9-11.3 8.6 0 16.6 1.97 24.2 5.9m146.5 41.1c-4.5 16.5-11.3 29.1-20.6 37.8-9.3 8.74-20.5 13.1-33.5 13.1s-21.9-4.4-26.6-13.2c-4.8-8.85-4.9-21.6-.4-38.36 4.5-16.75 11.4-29.6 20.9-38.5 9.5-8.97 20.7-13.45 33.7-13.45 12.8 0 21.4 4.6 26 13.9s4.7 22.2.28 38.7m36.8-81.4c-9.75-7.8-22.2-11.7-37.3-11.7-13.23 0-25.84 3-37.8 9.06-11.95 6.05-21.65 14.3-29.1 24.74l.18-1.2 8.83-28.1h-51.4l-13.1 48.9-.4 1.7-54 201.44h52.7l27.2-101.4c2.7 9.02 8.2 16.1 16.6 21.22 8.4 5.1 18.77 7.63 31.1 7.63 15.3 0 29.9-3.7 43.75-11.1 13.9-7.42 25.9-18.1 36.1-31.9s17.77-29.8 22.6-47.9c4.9-18.13 5.9-34.3 3.1-48.45-2.85-14.17-9.16-25.14-18.9-32.9m174.65 80.65c-4.5 16.7-11.4 29.5-20.7 38.3-9.3 8.86-20.5 13.27-33.5 13.27-13.3 0-22.3-4.3-27-13-4.8-8.7-4.9-21.3-.5-37.8s11.42-29.4 21.12-38.7 21.05-13.94 34.07-13.94c13 0 21.8 4.5 26.4 13.4 4.6 8.93 4.63 21.76.15 38.5zm23.5-87.85-6.73 25.1c-2.9-9.05-8.5-16.25-16.8-21.6-8.4-5.34-18.7-8-31-8-15.1 0-29.68 3.9-43.6 11.7-13.9 7.8-26.1 18.74-36.5 32.9s-18 30.3-22.9 48.4c-4.85 18.17-5.8 34.1-2.9 47.96 2.93 13.8 9.24 24.46 19 31.9 9.74 7.4 22.3 11.14 37.6 11.14 12.3 0 24.05-2.56 35.2-7.7a82.3 82.3 0 0 0 28.33-21.23l-7 26.18h51.9l47.38-176.7h-51.9zm269.87.06.03-.05h-31.9c-1.02 0-1.92.05-2.85.07h-16.55l-8.5 11.8-2.1 2.8-.9 1.4-67.25 93.68-13.9-109.7h-55.08l27.9 166.7-61.6 85.3h54.9l14.9-21.13c.42-.62.8-1.14 1.3-1.8l17.4-24.7.5-.7 77.93-110.5 65.7-93 .1-.06h-.03z" />
                                    </svg>
                                </div>

                            </div>
                            <!-- third radio -->
                            <!-- <div class="form-check mt-3 payment-box">
                                <input class="form-check-input payment-method-cod" type="radio" name="paymentMethod"
                                    id="payment-method-cod" value="1" />
                                <div class="form-check-label payment-flex" for="payment-method-cod">
                                    <span>Wallet</span>
                                </div>

                            </div> -->



                        </div>
                    </div>
                </div>
            </div>
            <!-- end of third accordion -->

            <!-- Right -->
            <div class="col-lg-3">
                <div class="card position-sticky top-0 border-1">
                    <div class="p-3 bg-light bg-opacity-10">
                        <h6 class="card-title mb-3">Order Summary</h6>
                        <div class="d-flex justify-content-between mb-1 small">
                            <span>Subtotal</span> <span>&#8377;<%= (cartDetails.totalPrice).toLocaleString() %></span>
                        </div>
                        <div class="d-flex justify-content-between mb-1 small text-success">
                            <span>Savings</span> <span>&#8377;<%=
                                    (cartDetails.totalPrice-cartDetails.payableAmount).toLocaleString() %></span>
                        </div>
                        <% if(cartDetails.payableAmount<500){ %>
                            <div class="d-flex justify-content-between mb-1 small ">
                                <span>Shipping</span> <span>&#8377;100.00</span>
                            </div>
                            <% }else{ %>
                                <div class="d-flex justify-content-between mb-1 small text-success">
                                    <span>Shipping</span> <span>Free</span>
                                </div>
                                <% } %>

                                    <hr>
                                    <div class="d-flex justify-content-between mb-4 small">
                                        <span>TOTAL</span> <strong class="text-dark">&#8377;<%=
                                                (cartDetails.payableAmount).toLocaleString() %></strong>
                                    </div>
                                    <!-- <div class="form-check mb-1 small">
                            <input class="form-check-input" type="checkbox" value="" id="tnc">
                            <label class="form-check-label" for="tnc">
                                I agree to the <a href="#">terms and conditions</a>
                            </label>
                        </div>
                        <div class="form-check mb-3 small">
                            <input class="form-check-input" type="checkbox" value="" id="subscribe">
                            <label class="form-check-label" for="subscribe">
                                Get emails about product updates and events. If you change your mind, you can
                                unsubscribe at any time. <a href="#">Privacy Policy</a>
                            </label>
                        </div> -->
                                    <form action="" method="post" id="place-order-form">

                                        <button type="submit" class="btn btn-success w-100 mt-2"
                                            data-amount="<%=cartDetails.payableAmount%>"
                                            data-username="<%= user.name %>" data-mail="<%= user.email %>"
                                            data-phone="<%= user.phone %>" id="place-order-btn">Place
                                            order</button>
                                    </form>
                                    <a href="/user/cart" class="btn btn-secondary w-100 mt-2">Go
                                        Back</a>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <%- include('footer') %>
        <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
        <script>

            // find the selected address based on the index of stored address
            const addressCount = document.querySelectorAll('.checkout-address')
            let addressIndex
            addressCount.forEach((ele) => {
                ele.addEventListener('change', (e) => {
                    e.preventDefault()
                    addressIndex = parseInt(ele.value)
                })
            })

            // find the payment method 
            const paymentMethod = document.querySelectorAll('.payment-method-cod')
            let paymentMode
            paymentMethod.forEach((ele) => {
                ele.addEventListener('change', (e) => {
                    e.preventDefault()
                    paymentMode = parseInt(ele.value)
                })
            })


            //order placement using fetch
            // onclick event for place order button
            const orderPlacementBtn = document.getElementById('place-order-btn')
            orderPlacementBtn.addEventListener('click', (e) => {
                e.preventDefault()

                let validated = true
                // validation for selected address 
                if (addressIndex < 0 || addressIndex >= 4 || addressIndex === undefined) {
                    validated = false
                    Swal.fire({
                        icon: "warning",
                        title: "Invalid Delivery Address",
                        text: "Please selected a valid address",
                    })
                }
                console.log(paymentMode);

                // validation for payment method
                if (paymentMode === undefined) {
                    validated = false
                    Swal.fire({
                        icon: "warning",
                        title: "Invalid Payment method",
                        text: "Please selected a payment method",
                    })
                }


                // data from the button
                const totalAmount = orderPlacementBtn.getAttribute('data-amount')
                const username = orderPlacementBtn.getAttribute('data-username')
                const email = orderPlacementBtn.getAttribute('data-email')
                const phone = orderPlacementBtn.getAttribute('data-phone')

                // if the user select the payment as razor pay and a valid address
                if (validated && paymentMode === 1) {
                    const URL = `/user/payment-render/${totalAmount}`;

                    // fetch for order placement 
                    fetch(URL, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        }
                    }).then((res) => {
                        if (!res.ok) {
                            throw new Error("Cannot render the payment page");
                        }
                        return res.json();
                    }).then((data) => {
                        if (data.orderID) {
                            const options = {
                                "key": "rzp_test_7sxqZBOSt6LOIS",
                                "amount": totalAmount * 100,
                                "currency": "INR",
                                "name": "CLEAT CRAFT",
                                "order_id": data.orderID,
                                "callback_url": `http://localhost:4000/user/place-order/${addressIndex}/${paymentMode}`,
                                "prefill": {
                                    "name": username,
                                    "email": email,
                                    "contact": phone
                                },
                                "notes": {
                                    "address": "Razorpay Corporate Office"
                                },
                                "theme": {
                                    "color": "#6351CE"
                                },

                            };

                            const rzp1 = new Razorpay(options);
                            rzp1.open();
                            e.preventDefault()


                        } else {
                            throw new Error("Order ID not received");
                        }
                    }).catch((error) => {
                        Swal.fire({
                            icon: "error",
                            title: "Error on loading payment method",
                            text: error
                        })
                        console.error("Error during payment initiation:", error);
                    });
                }
                // end of place order through razor pay


                const orderPlacementForm = document.getElementById('place-order-form')
                // if the user select the payment as cash on delivery
                if (validated && paymentMode === 0) {
                    const URL = `/user/place-order/${addressIndex}/${paymentMode}`
                    orderPlacementForm.action = URL
                    orderPlacementForm.submit()
                }
                // end of fetch for order placing using cash on delivery

            })
            // end of onclick event of order button

            // delete address
            function deleteAddress(index) {
                const URL = `/user/delete-address/${index}`

                Swal.fire({
                    icon: "question",
                    title: "Delete Address",
                    text: "Are you sure want to delete the address?",
                    showCancelButton: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(URL, {
                            method: "DELETE",
                        }).then((Response) => {
                            if (Response.ok) {
                                Swal.fire({
                                    icon: "success",
                                    title: "Address deleted",
                                    showConfirmButton: false,
                                    timer: 700,
                                }).then(() => {
                                    // const addressElement = document.getElementById(`address-${index}`);
                                    // if (addressElement) {
                                    //     addressElement.remove();
                                    // }
                                    window.location.reload()
                                })

                            }
                        })
                    }
                })
            }


            // get the address details on the modal


            // validation for adding address 
            const addressForm = document.getElementById('add-address-form')
            const contactName = document.getElementsByName('name')[0]
            const pincode = document.getElementsByName('pincode')[0]
            const homeAddress = document.getElementsByName('addressHome')[0]
            const areaAddress = document.getElementsByName('addressArea')[0]
            const landmark = document.getElementsByName('addressLandmark')[0]

            // validation for adding new address
            addressForm.addEventListener('submit', (e) => {
                e.preventDefault();

                document.getElementsByClassName('validate-user-address')[0].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[1].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[2].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[3].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[4].innerHTML = ""

                let isvalid = true;
                let validateMessage = ""
                const userNameRegex = /^[a-zA-Z\s]+$/;

                // check name is empty and it's only having number
                if (contactName.value.trim() === "" || !userNameRegex.test(contactName.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[0].innerHTML = "Enter a valid name"
                }
                // check pincode
                if (pincode.value.length > 6 || isNaN(pincode.value) || pincode.value.length <= 0) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[1].innerHTML = "Enter a valid Pincode with six digits"
                }
                // validate home address
                if (homeAddress.value.length > 100 || homeAddress.value.length < 20 || !isNaN(homeAddress.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[2].innerHTML = "Enter a valid home address between 20 and 100 characters"
                }
                // validate area address
                if (areaAddress.value.length > 100 || areaAddress.value.length < 10 || !isNaN(areaAddress.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[3].innerHTML = "Enter a valid area address between 10 and 100 characters"
                }
                // validate landmark
                if (landmark.value.length > 50 || !isNaN(landmark.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[4].innerHTML = "Enter a valid landmark with maximum 50 characters"
                }

                // if form is valid then the form is submitted
                if (isvalid) {

                    addressForm.submit()
                }
            })

            // edit address- add selected address field on the edit address form field
            const editAddressForm = document.getElementById('edit-address-form')
            const contactNameEdit = document.getElementsByName('name')[1]
            const pincodeEdit = document.getElementsByName('pincode')[1]
            const homeAddressEdit = document.getElementsByName('addressHome')[1]
            const areaAddressEdit = document.getElementsByName('addressArea')[1]
            const landmarkEdit = document.getElementsByName('addressLandmark')[1]
            const addressIndexEdit = document.getElementsByName('addressIndex')[0]


            document.querySelectorAll('#edit-address-button').forEach((button) => {
                button.addEventListener('click', (e) => {


                    document.getElementsByClassName('validate-user-address')[5].innerHTML = ""
                    document.getElementsByClassName('validate-user-address')[6].innerHTML = ""
                    document.getElementsByClassName('validate-user-address')[7].innerHTML = ""
                    document.getElementsByClassName('validate-user-address')[8].innerHTML = ""
                    document.getElementsByClassName('validate-user-address')[9].innerHTML = ""

                    // Get the address data from the data-address attribute
                    let addressDataString = button.getAttribute('data-address');
                    let addressIndex = button.getAttribute('data-index');


                    // Convert the object-like string to a valid JSON string
                    addressDataString = addressDataString
                        .replace(/'/g, '"') // Replace single quotes with double quotes
                        .replace(/(\w+):/g, '"$1":'); // Add double quotes around keys

                    // Parse the JSON string to an object
                    const addressData = JSON.parse(addressDataString);

                    contactNameEdit.value = addressData.contactName;
                    pincodeEdit.value = addressData.pincode;
                    homeAddressEdit.value = addressData.homeAddress;
                    areaAddressEdit.value = addressData.areaAddress;
                    landmarkEdit.value = addressData.landmark;
                    addressIndexEdit.value = parseInt(addressIndex)

                    // change the edit address form action
                    editAddressForm.setAttribute('action', `/user/edit-address-checkout/${parseInt(addressIndex)}`)
                });
            });



            // validation for adding new address
            editAddressForm.addEventListener('submit', (e) => {
                e.preventDefault();

                document.getElementsByClassName('validate-user-address')[5].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[6].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[7].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[8].innerHTML = ""
                document.getElementsByClassName('validate-user-address')[9].innerHTML = ""

                let isvalid = true;
                let validateMessage = ""
                const userNameRegex = /^[a-zA-Z\s]+$/;

                // check name is empty and it's only having number
                if (contactNameEdit.value.trim() === "" || !userNameRegex.test(contactNameEdit.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[5].innerHTML = "Enter a valid name"
                }
                // check pincode
                if (pincodeEdit.value.length > 6 || isNaN(pincodeEdit.value) || pincodeEdit.value.length <= 0) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[6].innerHTML = "Enter a valid Pincode with six digits"
                }
                // validate home address
                if (homeAddressEdit.value.length > 100 || homeAddressEdit.value.length < 20 || !isNaN(homeAddressEdit.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[7].innerHTML = "Enter a valid home address between 20 and 100 characters"
                }
                // validate area address
                if (areaAddressEdit.value.length > 100 || areaAddressEdit.value.length < 10 || !isNaN(areaAddressEdit.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[8].innerHTML = "Enter a valid area address between 10 and 100 characters"
                }
                // validate landmark
                if (landmarkEdit.value.length > 50 || !isNaN(landmarkEdit.value)) {
                    isvalid = false
                    document.getElementsByClassName('validate-user-address')[9].innerHTML = "Enter a valid landmark with maximum 50 characters"
                }

                // if form is valid then the form is submitted
                if (isvalid) {

                    editAddressForm.submit()
                }
            })





        </script>