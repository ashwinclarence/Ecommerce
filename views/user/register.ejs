<style>
  .admin-register-container {
    min-height: 120vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: url("../../image/userRegister.png");
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
  }

  .register-form {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3rem;
    border: 1px solid #c8c8c8;
    border-radius: 10px;
    padding: 3rem 2rem;
    background-color: rgba(255, 255, 255, 0.4);
    -webkit-backdrop-filter: blur(5px);
    backdrop-filter: blur(5px);
    width: 35vw;
  }

  .register-form form {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    width: 90%;
  }

  .register-form input {
    width: 90%;
    height: 2.5rem;
    border-radius: 10px;
    outline: none;
    border: none;
    background-color: #e7e7e7;
    color: #000000;
    padding: 10px;
  }

  .register-form button {
    width: 10rem;
  }
</style>

<%- include('navbar') %>

  <section>
    <div>
      <div class="row g-0">
        <div class="col-12 col-md-6">
          <div class="d-flex align-items-center justify-content-center h-100">
            <div class="col-10 col-xl-8 py-3">
              <h2 class="h1 mb-4">Empowering your game</h2>
              <p class="lead m-0">
                with elite football footwear that champions performance, style,
                and excellence on the field.
              </p>
            </div>
          </div>
        </div>
        <div class="col-12 col-md-6 pe-5">
          <div class="card-body p-3 p-md-4 p-xl-5">
            <div class="row">
              <div class="col-12 text-center">
                <h2 class="h3">Registration</h2>
              </div>
            </div>
            <form action="/signup" method="post" id="registration-form">
              <div class="row overflow-hidden">
                <div class="col-12 mb-2">
                  <label for="firstName" class="form-label">
                    First Name <span class="text-danger">*</span>
                  </label>
                  <input type="text" class="form-control" name="name" id="firstName" placeholder="First Name"
                    autocomplete="off" />
                  <label for="" class="validate-register text-danger"></label>
                </div>
                <div class="col-12 mb-2">
                  <label for="lastName" class="form-label">
                    Phone Number <span class="text-danger">*</span>
                  </label>
                  <input type="text" class="form-control" name="phone" id="lastName" placeholder="Phone Number"
                    autocomplete="off" />
                  <label for="" class="validate-register text-danger"></label>
                </div>
                <div class="col-12 mb-2">
                  <label for="email" class="form-label">Email <span class="text-danger">*</span></label>
                  <input type="email" class="form-control" name="email" id="email" placeholder="name@example.com"
                    autocomplete="off" />
                  <label for="" class="validate-register text-danger"></label>
                </div>
                <div class="col-12 mb-2">
                  <label for="password" class="form-label">Password <span class="text-danger">*</span></label>
                  <input type="password" class="form-control" name="password" id="user-password" autocomplete="off" />
                  <label for="" class="validate-register text-danger"></label>
                  <ul style="list-style: none;">
                    <li class=""><i class="fa-solid password-validation-criteria fa-circle-xmark text-danger"></i> Minimum of 8
                      characters, maximum of 128 characters </li>
                    <li class=""><i class="fa-solid password-validation-criteria fa-circle-xmark  text-danger"></i> Include at least
                      one uppercase letter</li>
                    <li class=""><i class="fa-solid password-validation-criteria fa-circle-xmark text-danger"></i> Include at least
                      one lowercase letter</li>
                    <li class=""><i class="fa-solid password-validation-criteria fa-circle-xmark text-danger"></i> Include at least
                      one numeric digit</li>
                    <li class=""><i class="fa-solid password-validation-criteria fa-circle-xmark text-danger"></i> Include at least
                      and one special character</li>
                  </ul>
                </div>
                <div class="col-12 mb-2">
                  <label for="password" class="form-label">Confirm Password <span class="text-danger">*</span></label>
                  <input type="password" class="form-control" name="confirmPassword" id="user-confirm-password"
                    autocomplete="off" />
                  <label for="" class="validate-register text-danger"></label>
                </div>
                <div class="col-12 mb-2">
                  <div class="d-grid">
                    <button class="btn bsb-btn-xl btn-primary" type="submit" id="register-button">
                      Sign up
                    </button>
                  </div>
                </div>
              </div>
            </form>
            <div class="row">
              <div class="col-12">
                <hr class="mt-5 mb-4 border-secondary-subtle" />
                <p class="m-0 text-secondary text-center">
                  Already have an account?
                  <a href="/login" class="link-primary text-decoration-none">Sign in</a>
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <%- include('footer') %>

    <script>
      // password validation function
      function validatePassword(password) {
        // Check if the password length is at least 8 characters
        if (password.length < 8) {
          return true;
        }

        // Check if the password contains at least one uppercase letter
        if (!/[A-Z]/.test(password)) {
          return true;
        }

        // Check if the password contains at least one lowercase letter
        if (!/[a-z]/.test(password)) {
          return true;
        }

        // Check if the password contains at least one digit
        if (!/\d/.test(password)) {
          return true;
        }

        // Check if the password contains at least one special character
        if (!/[!@#$%^&*()_+\-=[\]{};':"\\|,.<>/?]/.test(password)) {
          console.log("issue");
          return true;
        }

        return false;
      }

      // function to validate the password
      function validateEmail(email) {
        const re = /\S+@\S+\.\S+/;
        return re.test(email);
      }

      const registerForm = document.getElementById("registration-form");
      const password = document.getElementById("user-password");
      const confirmPassword = document.getElementById("user-confirm-password");
      const registerBtn = document.getElementById("register-button");
      const email = document.getElementsByName("email")[0];
      const phoneNumber = document.getElementsByName("phone")[0];
      const name = document.getElementsByName("name")[0];
      const validateRegister = document.querySelectorAll(".validate-register");

      // event listener for registration form
      registerForm.addEventListener("submit", (e) => {
        e.preventDefault();

        let isValid = true;

        validateRegister.forEach((field) => {
          field.innerHTML = "";
        });

        if (name.value.trim() === "" || !isNaN(name) || name.value.length > 40) {
          isValid = false;
          validateRegister[0].innerHTML = "username should be between (1=40)";
        }

        if (!validateEmail(email.value)) {
          isValid = false;
          validateRegister[2].innerHTML = "Invalid email address";
        }

        if (isNaN(phoneNumber.value) || phoneNumber.value.length != 10) {
          isValid = false;
          validateRegister[1].innerHTML = "Phone number should be a valid one";
        }

        if (validatePassword(password.value)) {
          isValid = false;
        }

        if (password.value != confirmPassword.value) {
          isValid = false;
          validateRegister[4].innerHTML =
            "Password and confirm password must be same";
        }

        if (isValid) {
          registerForm.submit();
        }
      });

      // validation for already exist email
      email.addEventListener("change", (e) => {
        validateRegister[2].innerHTML = "";
        fetch("/check-email-exist", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ email: e.target.value }),
        })
          .then((res) => {
            return res.json();
          })
          .then((data) => {
            if (data.exist) {
              validateRegister[2].innerHTML = data.exist;
            }
          })
          .catch((err) => {
            console.log("Error on checking user email exist ", err);
          });
      });


      const passwordCriteria = document.querySelectorAll('.password-validation-criteria');

      // validation for password criteria
      password.addEventListener('input', (e) => {
        let password = e.target.value;

        // Check if the password is at least 8 characters long
        if (password.length >= 8) {
          passwordCriteria[0].classList.replace('fa-circle-xmark', 'fa-circle-check');
          passwordCriteria[0].classList.replace('text-danger', 'text-success');
        } else {
          passwordCriteria[0].classList.replace('fa-circle-check', 'fa-circle-xmark');
          passwordCriteria[0].classList.replace('text-success','text-danger');
        }

        // Check if the password contains at least one uppercase letter
        if (/[A-Z]/.test(password)) {
          passwordCriteria[1].classList.replace('fa-circle-xmark', 'fa-circle-check');
          passwordCriteria[1].classList.replace('text-danger', 'text-success');

        } else {
          passwordCriteria[1].classList.replace('fa-circle-check', 'fa-circle-xmark');
          passwordCriteria[1].classList.replace('text-success','text-danger');
        }

        // Check if the password contains at least one lowercase letter
        if (/[a-z]/.test(password)) {
          passwordCriteria[2].classList.replace('fa-circle-xmark', 'fa-circle-check');
          passwordCriteria[2].classList.replace('text-danger', 'text-success');
        } else {
          passwordCriteria[2].classList.replace('fa-circle-check', 'fa-circle-xmark');
          passwordCriteria[2].classList.replace('text-success','text-danger');
        }

        // Check if the password contains at least one digit
        if (/\d/.test(password)) {
          passwordCriteria[3].classList.replace('fa-circle-xmark', 'fa-circle-check');
          passwordCriteria[3].classList.replace('text-danger', 'text-success');
        } else {
          passwordCriteria[3].classList.replace('fa-circle-check', 'fa-circle-xmark');
          passwordCriteria[3].classList.replace('text-success','text-danger');
        }

        // Check if the password contains at least one special character
        if (/[!@#$%^&*()_+\-=[\]{};':"\\|,.<>/?]/.test(password)) {
          passwordCriteria[4].classList.replace('fa-circle-xmark', 'fa-circle-check');
          passwordCriteria[4].classList.replace('text-danger', 'text-success');
        } else {
          passwordCriteria[4].classList.replace('fa-circle-check', 'fa-circle-xmark');
          passwordCriteria[4].classList.replace('text-success','text-danger');
        }
      });






    </script>